<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Extents - Washing Tank example</title>
    <link href="css/samples.css" rel="stylesheet" type="text/css">
    <!--[if IE]><script language="javascript" type="text/javascript" src="js/excanvas.min.js"></script><![endif]-->
    <script language="javascript" type="text/javascript" src="js/jquery.min.js"></script>
    <script language="javascript" type="text/javascript" src="js/jquery.flot.min.js"></script>
    <script language="javascript" type="text/javascript" src="js/jquery.flot.time.min.js"></script>
    <script language="javascript" type="text/javascript" src="js/jquery.flot.extents.js"></script>
</head>

<body>
        <div id="placeholder" style="width:600px;height:300px;position:relative;"></div>
    <script type="text/javascript">
        $(function() {
		
            var extentsSeriesData = [{
                label: 'Fixed Commision: <b>11%</b>',
                start: new Date(2014, 0, 1),
                end: new Date(2014, 5, 1),
				id: 0
            }, {
                label: 'Fixed Commision: <b>15%</b>',
                start: new Date(2014, 2, 1),
                end: new Date(2014, 4, 1),
				id: 1
            },{
                label: 'Fixed cost: <b>400 EUR</b>',
                start: new Date(2014, 5, 1),
                end: new Date(2014, 9, 1),
				id: 2
            },  {
                label: 'Fixed cost: <b>2000,00 EUR</b> per month',
                start: new Date(2014, 7, 1),
                end: new Date(2014, 10, 1),
				id: 3
            }, {
                label: 'Fixed cost: <b>2000,00 EUR</b> per month',
                start: new Date(2014, 9, 1),
                end: new Date(2014, 12, 1),
				id: 4,
				expandBar: 0
            }];
			
            var lineSeriesData = [
                [new Date(2014, 0, 1), 1,{additional: 'data'}],
                [new Date(2014, 2, 1), 10],
                [new Date(2014, 3, 1), 3],
                [new Date(2014, 5, 14), 4],
                [new Date(2014, 6, 1), 10],
                [new Date(2014, 7, 1), 3],
                [new Date(2015, 11, 1), 8]
            ];

            var lineSeries = {
                label: "Dynamic Cost of Distribution",
                points: {
                    show: true
                },
                lines: {
					show: true
                },
                color: "#ccc",
                data: lineSeriesData
            };
			
			/*var extentsSeriesRealFillData = [];
			$.each(extentsSeriesData, function(){
				extentsSeriesRealFillData.push([this.start + " - " + this.end,this.label]);
			});*/
			
			var extentsData = $.map(extentsSeriesData, function(value, index) {
			  return [[value.start,value.end,value.label]];
			});
			
            var extentsSeries = {
				data: [],//extentsData,
                extents: {
                    show: true,
                    barVAlign: 'bottom',
					barHeight : 25,
					rowHeight : 50,
                    fillColor: {
						topColor: "rgba(255,116,0,0.7)",
						bottomColor: "rgba(255,68,0,0.7)"
					},
					color: 'transparent',
					expandBar: 10,
					barWithPointers: true,
					rows: 0
                },
				lines: {show: false},
				tooltip: {show: false},
                extentdata: extentsSeriesData
            };
			
			var tooltipHandling = function(flot,$tooltipEl){
			
			};

            var optionsGlobal = {
				/*tooltip: true,
				tooltipOpts: {
					content: "%s: %y %</br> Date: %x",
					onHover: tooltipHandling
				},*/
                xaxis: {
                    mode: "time",
					ticks: 12,
                    minTickSize: [1, "month"],
                    min: (new Date(2014, 0, 1)).getTime(),
                    max: (new Date(2015, 0, 1,2)).getTime()
                },
				yaxis: {
					tickColor : '#ccc',
					color : 'transparent',
					tickLength : 10,
					tickFormatter : function(value){ return value + ' %'}
				},
				grid : {
					borderWidth: {'left': 1, 'top': 0, 'bottom': 1, 'right': 10},
					borderColor: {'left': "black", 'top': "transparent", 'bottom': "black", 'right': "transparent"},
					hoverable: true,
					clickable: true
				},
                lines: {
					show: true
                },
				extents: {
                    show: true
				}
            };
			

            var myFlot = $.plot($("#placeholder"), [lineSeries, extentsSeries], optionsGlobal);
			
			var highlighted = null;
			var clickedBy = null;
			$("#placeholder").bind("plotclick", function (event, pos, item, extents) {
				console.log(item);
				if (item) {
					//$("#clickdata").text(" - click point " + item.dataIndex + " in " + item.series.label);
					if(extents){
						myFlot.highlightExtent(item.series, item.dataIndex);
					} else{
						myFlot.highlight(item.series, item.datapoint);
					}
					highlighted = item;
					clickedBy = extents;
				} else if(clickedBy==extents){
					myFlot.unhighlight();
					myFlot.unhighlightExtents();
					highlighted = null;
				}
			});
			
			var previousPoint = null;
			var setBy = null;
			$("#placeholder").on('mousemove','.extentLabel',function(e){
				$("#placeholder").find('canvas').trigger('mousemove',e);//[{pageX: e.clientX, pageY: e.clientY},{dataIndex : parseInt(this.getAttribute('id'))},true]);
			});
			
			$("#placeholder").on('click','.extentLabel',function(e){
				$("#placeholder").find('canvas').trigger('click',e);//[{pageX: e.clientX, pageY: e.clientY},{dataIndex : parseInt(this.getAttribute('id'))},true]);
			});
			
			//handleExtentsTooltip
			function handleExtentsTooltip(pos,item){
				var y = extentsData[item.dataIndex][2];
				showTooltip(pos.pageX, pos.pageY, extentsData[item.dataIndex][0].toDateString() + ' - ' + extentsData[item.dataIndex][1].toDateString() + "</br>" + y );
			}
			
			//handleLineTooltip
			function handleLineTooltip(pos,item){
				var x = item.datapoint[0].toFixed(0),
					y = item.series.data[item.dataIndex][1];
				showTooltip(pos.pageX, pos.pageY, item.series.data[item.dataIndex][0].toDateString() + "</br>" + y );
			}
			
			$("#placeholder").bind("plothover", function (event, pos, item, extents) {
				if (item) {
					if (previousPoint != item.dataIndex) {
						previousPoint = item.dataIndex;
						setBy = extents;
						$("#tooltip").remove();
						if (extents){
							handleExtentsTooltip(pos,item);
						} else {
							handleLineTooltip(pos,item);
						}
						myFlot.unhighlight();
						highlighted = null;
					} else if(!highlighted){ 
						$("#tooltip").css({
							top: pos.pageY + 5,
							left: pos.pageX + 5
					})}
				} else if (highlighted==null && setBy==extents){
					$("#tooltip").remove();
					previousPoint = null;
				}
			});
			
			function showTooltip(x, y, contents) {
				$('<div id="tooltip">' + contents + '</div>').css({
					position: 'absolute',
					display: 'none',
					top: y + 5,
					left: x + 5,
					border: '1px solid #fdd',
					padding: '2px',
					'background-color': '#fee'
				}).appendTo("body").fadeIn(200);
			}
        });
    </script>
</body>

</html>